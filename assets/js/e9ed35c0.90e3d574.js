"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[6291],{3746:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=n(7896),l=(n(2784),n(876));const r={custom_edit_url:null},s=void 0,o={unversionedId:"api/PinchInput",id:"api/PinchInput",title:"PinchInput",description:"A module that passes the amount of change to eg.Axes when two pointers are moving toward (zoom-in) or away from each other (zoom-out). use one axis.",source:"@site/docs/api/PinchInput.mdx",sourceDirName:"api",slug:"/api/PinchInput",permalink:"/egjs-axes/docs/api/PinchInput",editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"api",previous:{title:"PanInput",permalink:"/egjs-axes/docs/api/PanInput"},next:{title:"RotatePanInput",permalink:"/egjs-axes/docs/api/RotatePanInput"}},i={},p=[{value:"constructor",id:"constructor",level:2},{value:"Methods",id:"methods",level:2},{value:"destroy",id:"destroy",level:3},{value:"enable",id:"enable",level:3},{value:"disable",id:"disable",level:3},{value:"isEnabled",id:"isEnabled",level:3}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"class PinchInput\n")),(0,l.kt)("div",{className:"bulma-tags"}),(0,l.kt)("p",null,"A module that passes the amount of change to eg.Axes when two pointers are moving toward (zoom-in) or away from each other (zoom-out). use one axis."),(0,l.kt)("div",{className:"container"},(0,l.kt)("div",{className:"row mb-2"},(0,l.kt)("div",{className:"col col--12"},(0,l.kt)("strong",null,"Methods"))),(0,l.kt)("div",{className:"row"},(0,l.kt)("div",{className:"col col--12"},(0,l.kt)("a",{href:"#destroy"},"destroy"),(0,l.kt)("br",null),(0,l.kt)("a",{href:"#enable"},"enable"),(0,l.kt)("br",null),(0,l.kt)("a",{href:"#disable"},"disable"),(0,l.kt)("br",null),(0,l.kt)("a",{href:"#isEnabled"},"isEnabled")))),(0,l.kt)("h2",{id:"constructor"},"constructor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"new PinchInput(element, options)\n")),(0,l.kt)("div",{className:"bulma-tags"}),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"center"},"PARAMETER"),(0,l.kt)("th",{parentName:"tr",align:"center"},"TYPE"),(0,l.kt)("th",{parentName:"tr",align:"center"},"OPTIONAL"),(0,l.kt)("th",{parentName:"tr",align:"center"},"DEFAULT"),(0,l.kt)("th",{parentName:"tr",align:"center"},"DESCRIPTION"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"element"),(0,l.kt)("td",{parentName:"tr",align:"center"},"HTMLElement ","|"," String ","|"," jQuery"),(0,l.kt)("td",{parentName:"tr",align:"center"}),(0,l.kt)("td",{parentName:"tr",align:"center"}),(0,l.kt)("td",{parentName:"tr",align:"center"},"An element to use the eg.Axes.PinchInput module")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},"options"),(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("a",{parentName:"td",href:"PinchInputOption"},"PinchInputOption")),(0,l.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,l.kt)("td",{parentName:"tr",align:"center"}),(0,l.kt)("td",{parentName:"tr",align:"center"},"The option object of the eg.Axes.PinchInput module")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'const pinch = new eg.Axes.PinchInput("#area", {\n  scale: 1\n});\n\n// Connect \'something\' axis when two pointers are moving toward (zoom-in) or away from each other (zoom-out).\naxes.connect("something", pinch);\n')),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"destroy"},"destroy"),(0,l.kt)("div",{className:"bulma-tags"}),(0,l.kt)("p",null,"Destroys elements, properties, and events used in a module."),(0,l.kt)("h3",{id:"enable"},"enable"),(0,l.kt)("div",{className:"bulma-tags"}),(0,l.kt)("p",null,"Enables input devices"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("a",{parentName:"p",href:"PinchInput"},"PinchInput")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"An instance of a module itself")),(0,l.kt)("h3",{id:"disable"},"disable"),(0,l.kt)("div",{className:"bulma-tags"}),(0,l.kt)("p",null,"Disables input devices"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("a",{parentName:"p",href:"PinchInput"},"PinchInput")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"An instance of a module itself")),(0,l.kt)("h3",{id:"isEnabled"},"isEnabled"),(0,l.kt)("div",{className:"bulma-tags"}),(0,l.kt)("p",null,"Returns whether to use an input device"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),": Boolean"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Whether to use an input device")))}c.isMDXComponent=!0}}]);