"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[8052],{3022:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>r,toc:()=>u});var a=n(7896),s=(n(2784),n(876));const l={custom_edit_url:null},o=void 0,r={unversionedId:"api/PanInput",id:"api/PanInput",title:"PanInput",description:"A module that passes the amount of change to eg.Axes when the mouse or touchscreen is down and moved. use less than two axes.",source:"@site/docs/api/PanInput.mdx",sourceDirName:"api",slug:"/api/PanInput",permalink:"/egjs-axes/docs/api/PanInput",editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"api",previous:{title:"MoveKeyInput",permalink:"/egjs-axes/docs/api/MoveKeyInput"},next:{title:"PinchInput",permalink:"/egjs-axes/docs/api/PinchInput"}},i={},u=[{value:"constructor",id:"constructor",level:2},{value:"Methods",id:"methods",level:2},{value:"destroy",id:"destroy",level:3},{value:"enable",id:"enable",level:3},{value:"disable",id:"disable",level:3},{value:"isEnabled",id:"isEnabled",level:3},{value:"release",id:"release",level:3}],p={toc:u};function d(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"class PanInput\n")),(0,s.kt)("div",{className:"bulma-tags"}),(0,s.kt)("p",null,"A module that passes the amount of change to eg.Axes when the mouse or touchscreen is down and moved. use less than two axes."),(0,s.kt)("div",{className:"container"},(0,s.kt)("div",{className:"row mb-2"},(0,s.kt)("div",{className:"col col--12"},(0,s.kt)("strong",null,"Methods"))),(0,s.kt)("div",{className:"row"},(0,s.kt)("div",{className:"col col--12"},(0,s.kt)("a",{href:"#destroy"},"destroy"),(0,s.kt)("br",null),(0,s.kt)("a",{href:"#enable"},"enable"),(0,s.kt)("br",null),(0,s.kt)("a",{href:"#disable"},"disable"),(0,s.kt)("br",null),(0,s.kt)("a",{href:"#isEnabled"},"isEnabled"),(0,s.kt)("br",null),(0,s.kt)("a",{href:"#release"},"release")))),(0,s.kt)("h2",{id:"constructor"},"constructor"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"new PanInput(element, options)\n")),(0,s.kt)("div",{className:"bulma-tags"}),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:"center"},"PARAMETER"),(0,s.kt)("th",{parentName:"tr",align:"center"},"TYPE"),(0,s.kt)("th",{parentName:"tr",align:"center"},"OPTIONAL"),(0,s.kt)("th",{parentName:"tr",align:"center"},"DEFAULT"),(0,s.kt)("th",{parentName:"tr",align:"center"},"DESCRIPTION"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"center"},"element"),(0,s.kt)("td",{parentName:"tr",align:"center"},"String ","|"," HTMLElement ","|"," Ref.","<","HTMLElement",">"," ","|"," jQuery"),(0,s.kt)("td",{parentName:"tr",align:"center"}),(0,s.kt)("td",{parentName:"tr",align:"center"}),(0,s.kt)("td",{parentName:"tr",align:"center"},"An element to use the eg.Axes.PanInput module")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"center"},"options"),(0,s.kt)("td",{parentName:"tr",align:"center"},(0,s.kt)("a",{parentName:"td",href:"PanInputOption"},"PanInputOption")),(0,s.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,s.kt)("td",{parentName:"tr",align:"center"},"{}"),(0,s.kt)("td",{parentName:"tr",align:"center"},"The option object of the eg.Axes.PanInput module")))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'const pan = new eg.Axes.PanInput("#area", {\n    inputType: ["touch"],\n    scale: [1, 1.3],\n});\n\n// Connect the \'something2\' axis to the mouse or touchscreen x position when the mouse or touchscreen is down and moved.\n// Connect the \'somethingN\' axis to the mouse or touchscreen y position when the mouse or touchscreen is down and moved.\naxes.connect(["something2", "somethingN"], pan); // or axes.connect("something2 somethingN", pan);\n\n// Connect only one \'something1\' axis to the mouse or touchscreen x position when the mouse or touchscreen is down and moved.\naxes.connect(["something1"], pan); // or axes.connect("something1", pan);\n\n// Connect only one \'something2\' axis to the mouse or touchscreen y position when the mouse or touchscreen is down and moved.\naxes.connect(["", "something2"], pan); // or axes.connect(" something2", pan);\n')),(0,s.kt)("h2",{id:"methods"},"Methods"),(0,s.kt)("h3",{id:"destroy"},"destroy"),(0,s.kt)("div",{className:"bulma-tags"}),(0,s.kt)("p",null,"Destroys elements, properties, and events used in a module."),(0,s.kt)("h3",{id:"enable"},"enable"),(0,s.kt)("div",{className:"bulma-tags"}),(0,s.kt)("p",null,"Enables input devices"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Returns"),": ",(0,s.kt)("a",{parentName:"p",href:"PanInput"},"PanInput")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"An instance of a module itself")),(0,s.kt)("h3",{id:"disable"},"disable"),(0,s.kt)("div",{className:"bulma-tags"}),(0,s.kt)("p",null,"Disables input devices"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Returns"),": ",(0,s.kt)("a",{parentName:"p",href:"PanInput"},"PanInput")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"An instance of a module itself")),(0,s.kt)("h3",{id:"isEnabled"},"isEnabled"),(0,s.kt)("div",{className:"bulma-tags"}),(0,s.kt)("p",null,"Returns whether to use an input device"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Returns"),": Boolean"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Whether to use an input device")),(0,s.kt)("h3",{id:"release"},"release"),(0,s.kt)("div",{className:"bulma-tags"}),(0,s.kt)("p",null,"Releases current user input."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Returns"),": ",(0,s.kt)("a",{parentName:"p",href:"PanInput"},"PanInput")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"An instance of a module itself")))}d.isMDXComponent=!0}}]);