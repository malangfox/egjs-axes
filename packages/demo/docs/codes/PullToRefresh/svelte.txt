<script>
  import { onMount } from "svelte";
  import { useAxes, PanInput } from "@egjs/svelte-axes";

  let slides = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
  let range = 0;
  let contentWrapper;
  let content;

  const { connect, setAxis, setTo, onChange, onRelease, isBounceArea, scroll } = useAxes({
    scroll: {
      range: [0, 0],
      bounce: 120,
    },
  });

  const getMaxRange = (content, contentWrapper) => {
    return (
      content.getBoundingClientRect().height -
      contentWrapper.getBoundingClientRect().height
    );
  };

  onChange(({ pos }) => {
    const prepend = document.getElementById("prepend");
    const append = document.getElementById("append");
    if (isBounceArea()) {
      const info = getInfo(pos.scroll);
      if (info.isAdd) {
        if (info.isTop) {
          prepend.innerText = "Release to prepend";
        } else {
          append.innerText = "Release to append";
        }
      } else {
        if (info.isTop) {
          prepend.innerText = "Pull to prepend";
        } else {
          append.innerText = "Pull to append";
        }
      }
    }
  });

  onRelease(({ depaPos }) => {
    if (isBounceArea()) {
      const info = getInfo(depaPos.scroll);
      if (info.isAdd) {
        const newIndex = Math.floor(Math.random() * 50 + 1);
        if (info.isTop) {
          slides = [newIndex, ...slides];
          setTo({ scroll: 0 });
        } else {
          slides = [...slides, newIndex];
        }
        setAxis({
          scroll: {
            range: [0, getMaxRange(content, contentWrapper)],
          },
        });
      }
    }
  });

  const getInfo = (pos) => {
    const state = pos > 0 ? (pos - range) / 120 : -pos / 120;
    return {
      isAdd: state > 0.8,
      isTop: pos < 0,
    };
  };

  onMount(() => {
    const maxRange = getMaxRange(content, contentWrapper);

    range = maxRange;
    setAxis({
      scroll: {
        range: [0, maxRange],
      },
    });
    connect(
      ["", "scroll"],
      new PanInput(contentWrapper, {
        scale: [0, -1],
      })
    );
  });
</script>

<div>
  <p>You can create a pull-to-refresh UI using one axis.</p>
  <div id="pull-contentWrapper" bind:this={contentWrapper}>
    <div id="prepend">Pull to prepend</div>
    <ul id="pull-content" style="transform: translate3d(0, {-$scroll}px, 0)" bind:this={content}>
      {#each slides as img}
        <li class="pull_drw">
          <div class="pull_im">
            <img src="../image/pulltorefresh/{img}.jpg" width="110"/>
          </div>
          <div class="pull_tx">
            <span class="pull_tit">
              egjs is Javascript components group that brings easiest and
              fastest way to build a web application in your way
            </span>
          </div>
        </li>
      {/each}
    </ul>
    <div id="append">Pull to append</div>
  </div>
  <div class="bottomWapper"></div>
</div>
