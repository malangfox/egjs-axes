<template>
  <div class="App">
    <p>You can rotate the cube using two axes.</p>
    <div id="area" ref="area">
      <div id="container" ref="container">
        <div id="box" ref="box" :style="{ transform: `rotateY(${rotateX}deg) rotateX(${rotateY}deg)` }">
          <div class="face metal-linear" :style="{ transform: 'rotateX(0deg) rotateY(0deg) translate3d(-50px,-50px,50px)' }">1</div>
          <div class="face metal-linear" :style="{ transform: 'rotateY(-90deg) translate3d(0px,-50px,100px)' }">2</div>
          <div class="face metal-linear" :style="{ transform: 'rotateY(90deg) translate3d(0px,-50px,0px)' }" >3</div>
          <div class="face metal-linear" :style="{ transform: 'rotateX(90deg) translate3d(-50px,0px,100px)' }">4</div>
          <div class="face metal-linear" :style="{ transform: 'rotateY(180deg) translate3d(50px,-50px,50px)' }">5</div>
          <div class="face metal-linear" :style="{ transform: 'rotateX(-90deg) translate3d(-50px,0px,0px)' }">6</div>
        </div>
      </div>
    </div>
  </div>
</template>

<script lang="ts">
import { ref, defineComponent, onMounted } from "vue";
import { PanInput, useAxes } from "@egjs/vue-axes";

export default defineComponent({
  name: "App",
  setup() {
    const area = ref(null);
    const { connect, rotateX, rotateY } = useAxes(
    {
      rotateX: {
        range: [0, 360],
        circular: true,
        startPos: 40,
      },
      rotateY: {
        range: [0, 360],
        circular: true,
        startPos: 315,
      },
    },
    {
      deceleration: 0.0024,
    });

    onMounted(() => {
      connect("rotateX rotateY", new PanInput(area));
    });

    return {
      area,
      rotateX,
      rotateY,
    };
  },
});
</script>
